// Copyright (C) 2007  Jakub Linhart
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

using System;
using System.IO;
using System.Xml;
using System.Xml.Xsl;
using System.Xml.XPath;

namespace PowerDoc.ObjectsGen {
	class ObjectsGen {
		private static StreamWriter initClassWriter;

		private static void TransformFile(string file, string xsltDoc) {
			Console.WriteLine(file);

			string resultDoc = Path.ChangeExtension(file, ".cs");
			string className = Path.GetFileName(file);
			className = Path.GetFileNameWithoutExtension(className);

			XPathDocument myXPathDocument = new XPathDocument(file);
			XslTransform myXslTransform = new XslTransform();
			XmlTextWriter writer = new XmlTextWriter(resultDoc, null);
			myXslTransform.Load(xsltDoc);
			myXslTransform.Transform(myXPathDocument, null, writer);
			writer.Close();

			initClassWriter.WriteLine(@"				" + className + ".Init();");
		}

		private static void TransformDirectory(string path, string xsltDoc) {
			string[] files = Directory.GetFiles(path, "*.xml");
			string[] dirs = Directory.GetDirectories(path);

			foreach (string file in files) {
				TransformFile(file, xsltDoc);
			}

			foreach (string dir in dirs) {
				TransformDirectory(dir, xsltDoc);
			}
		}

		private static void CreateInitHardwiredFile(string path) {
			initClassWriter = new StreamWriter(path + "\\InitHardwired.cs");
			initClassWriter.WriteLine(@"// This code was autogenerated.");
			initClassWriter.WriteLine(@"// Changes to this file will be lost if the file is regenerated.");
			initClassWriter.WriteLine();
			initClassWriter.WriteLine(@"using System;");
			initClassWriter.WriteLine();
			initClassWriter.WriteLine(@"namespace PowerDoc.PowerObjects {");
			initClassWriter.WriteLine(@"	public class InitHardwired {");
			initClassWriter.WriteLine(@"		public static void Init() {");
		}

		private static void CloseInitHardwiredFile() {
			initClassWriter.WriteLine(@"		}");
			initClassWriter.WriteLine(@"	}");
			initClassWriter.WriteLine(@"}");
			initClassWriter.Close();
		}

		public static void Main(string[] args) {
			string workingDir = args[0];
			string xsltDoc = args[1];

			CreateInitHardwiredFile(workingDir);
			TransformDirectory(workingDir, xsltDoc);
			CloseInitHardwiredFile();
		}
	}
}
